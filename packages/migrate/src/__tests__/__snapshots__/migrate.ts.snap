// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`migrate given a CRD should export an array containing a CRD 1`] = `
Array [
  Object {
    "apiVersion": "networking.istio.io/v1alpha3",
    "kind": "VirtualService",
    "metadata": Object {
      "name": "details",
    },
  },
]
`;

exports[`migrate given a CRD should generate code 1`] = `
"\\"use strict\\";


const virtualService = {
  \\"apiVersion\\": \\"networking.istio.io/v1alpha3\\",
  \\"kind\\": \\"VirtualService\\",
  \\"metadata\\": {
    \\"name\\": \\"details\\"
  }
};

module.exports = [virtualService];
"
`;

exports[`migrate given a List should export an array containing items in the list 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-deployment",
    },
    "spec": Object {
      "replicas": 2,
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "name": "test-service",
    },
    "spec": Object {
      "selector": Object {},
    },
  },
]
`;

exports[`migrate given a List should generate code 1`] = `
"\\"use strict\\";

const { Deployment } = require(\\"kubernetes-models/api/apps/v1/Deployment\\");
const { Service } = require(\\"kubernetes-models/api/core/v1/Service\\");

const deployment = new Deployment({
  \\"metadata\\": {
    \\"name\\": \\"test-deployment\\"
  },
  \\"spec\\": {
    \\"replicas\\": 2
  }
});

const service = new Service({
  \\"metadata\\": {
    \\"name\\": \\"test-service\\"
  },
  \\"spec\\": {
    \\"selector\\": {}
  }
});

module.exports = [deployment, service];
"
`;

exports[`migrate given a RBAC ClusterRoleBinding should export an array containing a ClusterRoleBinding 1`] = `
Array [
  Object {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": Object {
      "name": "tiller",
    },
  },
]
`;

exports[`migrate given a RBAC ClusterRoleBinding should generate code 1`] = `
"\\"use strict\\";

const { ClusterRoleBinding } = require(\\"kubernetes-models/api/rbac/v1/ClusterRoleBinding\\");

const clusterRoleBinding = new ClusterRoleBinding({
  \\"metadata\\": {
    \\"name\\": \\"tiller\\"
  }
});

module.exports = [clusterRoleBinding];
"
`;

exports[`migrate given multiple manifests of different kinds should export an array containing a deployment and a service 1`] = `
Array [
  Object {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": Object {
      "name": "test-deployment",
    },
    "spec": Object {
      "replicas": 2,
    },
  },
  Object {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": Object {
      "name": "test-service",
    },
    "spec": Object {
      "selector": Object {},
    },
  },
]
`;

exports[`migrate given multiple manifests of different kinds should generate code 1`] = `
"\\"use strict\\";

const { Deployment } = require(\\"kubernetes-models/api/apps/v1/Deployment\\");
const { Service } = require(\\"kubernetes-models/api/core/v1/Service\\");

const deployment = new Deployment({
  \\"metadata\\": {
    \\"name\\": \\"test-deployment\\"
  },
  \\"spec\\": {
    \\"replicas\\": 2
  }
});

const service = new Service({
  \\"metadata\\": {
    \\"name\\": \\"test-service\\"
  },
  \\"spec\\": {
    \\"selector\\": {}
  }
});

module.exports = [deployment, service];
"
`;

exports[`migrate given multiple manifests of same kind should export an array containing three config maps 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "data": Object {
      "foo": "bar",
    },
    "kind": "ConfigMap",
    "metadata": Object {
      "name": "config-foo",
    },
  },
  Object {
    "apiVersion": "v1",
    "data": Object {
      "bar": "baz",
    },
    "kind": "ConfigMap",
    "metadata": Object {
      "name": "config-bar",
    },
  },
  Object {
    "apiVersion": "v1",
    "data": Object {
      "baz": "boo",
    },
    "kind": "ConfigMap",
    "metadata": Object {
      "name": "config-baz",
    },
  },
]
`;

exports[`migrate given multiple manifests of same kind should generate code 1`] = `
"\\"use strict\\";

const { ConfigMap } = require(\\"kubernetes-models/api/core/v1/ConfigMap\\");

const configMap = new ConfigMap({
  \\"metadata\\": {
    \\"name\\": \\"config-foo\\"
  },
  \\"data\\": {
    \\"foo\\": \\"bar\\"
  }
});

const configMap1 = new ConfigMap({
  \\"metadata\\": {
    \\"name\\": \\"config-bar\\"
  },
  \\"data\\": {
    \\"bar\\": \\"baz\\"
  }
});

const configMap2 = new ConfigMap({
  \\"metadata\\": {
    \\"name\\": \\"config-baz\\"
  },
  \\"data\\": {
    \\"baz\\": \\"boo\\"
  }
});

module.exports = [configMap, configMap1, configMap2];
"
`;

exports[`migrate given no manifests should generate code 1`] = `
"\\"use strict\\";


module.exports = [];
"
`;

exports[`migrate given single manifest should export an array containing a pod 1`] = `
Array [
  Object {
    "apiVersion": "v1",
    "kind": "Pod",
    "metadata": Object {
      "name": "test-pod",
    },
    "spec": Object {
      "containers": Array [],
    },
  },
]
`;

exports[`migrate given single manifest should generate code 1`] = `
"\\"use strict\\";

const { Pod } = require(\\"kubernetes-models/api/core/v1/Pod\\");

const pod = new Pod({
  \\"metadata\\": {
    \\"name\\": \\"test-pod\\"
  },
  \\"spec\\": {
    \\"containers\\": []
  }
});

module.exports = [pod];
"
`;

exports[`migrateString given valid JSON should generate code 1`] = `
"\\"use strict\\";

const { Pod } = require(\\"kubernetes-models/api/core/v1/Pod\\");

const pod = new Pod({
  \\"metadata\\": {
    \\"name\\": \\"test-pod\\"
  },
  \\"spec\\": {
    \\"containers\\": []
  }
});

module.exports = [pod];
"
`;

exports[`migrateString given valid YAML should generate code 1`] = `
"\\"use strict\\";

const { Pod } = require(\\"kubernetes-models/api/core/v1/Pod\\");

const pod = new Pod({
  \\"metadata\\": {
    \\"name\\": \\"test-pod\\"
  },
  \\"spec\\": {
    \\"containers\\": []
  }
});

module.exports = [pod];
"
`;
